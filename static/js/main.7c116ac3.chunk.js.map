{"version":3,"sources":["components/Navbar/Navbar.tsx","components/coordinate.tsx","components/Koch/koch.tsx","components/Koch/kochElement.tsx","components/Tree/tree.tsx","components/Tree/treeComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Navbar","props","handleKochCurveClick","bind","handleTreeClick","fractalLinks","document","querySelector","classList","toggle","socialMediaLinks","this","parentCallback","className","onClick","href","target","id","style","textDecoration","handleFractalClick","handleSocialMediaClick","React","Component","Coordinate","x","y","_x","_y","Koch","start","end","_start","_end","xVal","yVal","pointB","lineLength","Math","cos","PI","lineHasPositiveSlope","acos","sin","pointA","pointC","pointD","pointE","sqrt","KochElement","_latestLines","_breakAnimation","updateKochLines","resetCanvas","canvas","width","height","speedSlider","getElementById","Number","value","ctx","getContext","tempLatestLines","clearRect","forEach","kochLine","pointPos","console","log","push","allKochPoints","setTimeout","drawKochCruve","speedSliderValue","length","beginPath","strokeStyle","moveTo","lineTo","stroke","defaultLatestLines","window","innerHeight","innerWidth","Button","variant","type","defaultValue","min","max","Tree","root","secPoint","angle","_root","_secondPoint","_angle","secondPoint","mainBranchLength","angleOfMainBranch","TreeElement","_latestTreeLines","_treeAngle","defaultAngle","_treeThickness","defaultTreeThickness","updateTreeLength","updateTreeAngle","baseTree","lineWidth","pointLeft","pointRight","tempLatestTreeLines","treeLine","drawTree","inputSlider","defaultSliderValue","step","onChange","App","navbarCallBack","message","setState","navBarClickElement","state","dia","arc","drawCircle","p1","p2","p3","closePath","drawTriangle","displayElement","Object","values","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7c116ac3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\n\r\nexport class Navbar extends React.Component<{ parentCallback: (message: string) => void }, {}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.handleKochCurveClick = this.handleKochCurveClick.bind(this);\r\n        this.handleTreeClick = this.handleTreeClick.bind(this);\r\n    }\r\n\r\n\r\n    handleFractalClick() {\r\n        let fractalLinks = document.querySelector(\".fractal-selection\");\r\n        fractalLinks?.classList.toggle(\"fractal-selection-active\");\r\n    }\r\n\r\n\r\n    handleSocialMediaClick() {\r\n        let socialMediaLinks = document.querySelector(\".Social-Media-selection\");\r\n        socialMediaLinks?.classList.toggle(\"Social-Media-selection-active\");\r\n    }\r\n\r\n    handleKochCurveClick() {\r\n        this.props.parentCallback(\"Koch curve\");\r\n    }\r\n\r\n    handleTreeClick() {\r\n        this.props.parentCallback(\"tree\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <div className=\"navbar-main\">\r\n                    <div className=\"fractal-selection\">\r\n                        <ul className=\"fractal-dropdown\">\r\n                            <li className=\"fractal-dd-item\" onClick={this.handleKochCurveClick}>Koch curve</li>\r\n                            <li className=\"fractal-dd-item\" onClick={this.handleTreeClick}>Tree</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"Social-Media-selection\">\r\n                        <ul className=\"Social-Media-dropdown\">\r\n                            <li className=\"Social-Media-dd-item\"><a href=\"https://www.instagram.com/sri._vatsa/\" target=\"_blank\" id=\"social-media-element\">Instagram</a></li>\r\n                            <li className=\"Social-Media-dd-item\"><a href=\"https://twitter.com/SrivatsaM11\" target=\"_blank\" style={{textDecoration: \"none\"}} id=\"social-media-element\">Twitter</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <ul className=\"nav-links\">\r\n                        <li className=\"Fractals\" onClick={this.handleFractalClick}>Fractals</li>\r\n                        <li className=\"Social-Media\" onClick={this.handleSocialMediaClick}>Social Media</li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","export class Coordinate {\r\n    _x: number;\r\n    _y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n\r\n    x() { return this._x; }\r\n\r\n    y() { return this._y; }\r\n\r\n}\r\n\r\n","import {Coordinate} from \"../coordinate\"\r\n\r\nexport class Koch {\r\n    _start: Coordinate;\r\n    _end: Coordinate;\r\n\r\n    constructor(start: Coordinate, end: Coordinate) {\r\n        this._start = start;\r\n        this._end = end;\r\n    }\r\n\r\n    pointA() { return this._start; }\r\n\r\n    pointB () {\r\n        let xVal = this._start.x() + (this._end.x() - this._start.x())/3;\r\n        let yVal = this._start.y() + (this._end.y() - this._start.y())/3;\r\n        return new Coordinate(xVal, yVal);\r\n    }\r\n\r\n    pointC() {\r\n        let xVal = this.pointB().x() + ((this.lineLength()/3)*Math.cos(Math.PI/3 - this.lineHasPositiveSlope()*Math.acos((this._end.x() - this._start.x())/ (this.lineLength()))));\r\n        // console.log(Math.cos(Math.PI/3 + Math.acos((this._end.x() - this._start.x())/ (this.lineLength()))));\r\n        let yVal = this.pointB().y() - ((this.lineLength()/3)*Math.sin(Math.PI/3 - this.lineHasPositiveSlope()*Math.acos((this._end.x() - this._start.x())/ (this.lineLength()))));\r\n        return new Coordinate(xVal, yVal);\r\n    }\r\n\r\n    pointD() {\r\n        let xVal = this._start.x() + (this._end.x() - this._start.x())*(2/3);\r\n        let yVal = this._start.y() + (this._end.y() - this._start.y())*(2/3)\r\n        return new Coordinate(xVal, yVal);\r\n    }\r\n\r\n    pointE() { return this._end; }\r\n\r\n\r\n    allKochPoints() {\r\n        return [this.pointA(), this.pointB(), this.pointC(), this.pointD(), this.pointE()];\r\n    }\r\n\r\n\r\n    lineLength() {\r\n        return Math.sqrt((this._end.x() - this._start.x())**2 + (this._end.y() - this._start.y())**2);\r\n    }\r\n\r\n    lineHasPositiveSlope() {\r\n        if ((this._end.y() - this._start.y())/ (this.lineLength()) < 0) return -1;\r\n        return 1;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Koch} from \"./koch\";\r\nimport {Coordinate} from \"../coordinate\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"./koch.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport class KochElement extends React.Component {\r\n\r\n    \r\n  _latestLines: Koch[] = [];\r\n  _breakAnimation: boolean = false;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.updateKochLines = this.updateKochLines.bind(this);\r\n        this.resetCanvas = this.resetCanvas.bind(this);\r\n    }\r\n\r\n    defaultLatestLines(canvas: HTMLCanvasElement) {\r\n        return [new Koch(new Coordinate(canvas.width*0.3, canvas.height/3), new Coordinate(canvas.width*0.7, canvas.height/3)),\r\n            new Koch(new Coordinate(canvas.width*0.7, canvas.height/3), new Coordinate(canvas.width*0.5, (canvas.height/3 + (canvas.width*0.4)/Math.sqrt(2)))),\r\n            new Koch(new Coordinate(canvas.width*0.5, (canvas.height/3 + (canvas.width*0.4)/Math.sqrt(2))), new Coordinate(canvas.width*0.3, canvas.height/3 ))\r\n        ];\r\n    }\r\n\r\n    speedSliderValue() {\r\n        let speedSlider = document.getElementById(\"customRange1\") as HTMLInputElement;\r\n        return Number(speedSlider.value);\r\n    }\r\n\r\n    updateKochLines() {\r\n        this._breakAnimation = false;\r\n        let canvas = document.getElementById(\"fractalCanvas\") as HTMLCanvasElement;\r\n        let ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n        let tempLatestLines: Koch[] = [];\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        this._latestLines.forEach(kochLine => {\r\n            for (let pointPos: number = 0; pointPos < kochLine.allKochPoints().length - 1; pointPos++) {   \r\n                console.log(this._breakAnimation); \r\n                if (!this._breakAnimation) {\r\n                    tempLatestLines.push(new Koch(kochLine.allKochPoints()[pointPos], kochLine.allKochPoints()[pointPos + 1 ]));\r\n                    setTimeout(()=>{this.drawKochCruve(new Koch(kochLine.allKochPoints()[pointPos], kochLine.allKochPoints()[pointPos + 1 ]), ctx);}, 100*(1/this.speedSliderValue()));\r\n                }\r\n            }\r\n        });\r\n        this._latestLines = tempLatestLines;  \r\n    }\r\n\r\n\r\n    drawKochCruve(kochLine: Koch, ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"#FFFFFF\";\r\n        ctx.moveTo(kochLine.pointA().x(), kochLine.pointA().y());\r\n        ctx.lineTo(kochLine.pointB().x(), kochLine.pointB().y());\r\n        ctx.lineTo(kochLine.pointC().x(), kochLine.pointC().y());\r\n        ctx.lineTo(kochLine.pointD().x(), kochLine.pointD().y());\r\n        ctx.lineTo(kochLine.pointE().x(), kochLine.pointE().y());\r\n        ctx.stroke();\r\n    }\r\n\r\n    resetCanvas() {\r\n        let canvas = document.getElementById(\"fractalCanvas\") as HTMLCanvasElement;\r\n        let ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        this._latestLines = this. defaultLatestLines(canvas);\r\n        this._breakAnimation = true;\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let canvas = document.getElementById(\"fractalCanvas\") as HTMLCanvasElement;\r\n        let ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n        canvas.height = window.innerHeight;\r\n        canvas.width = window.innerWidth;\r\n        this._latestLines = this.defaultLatestLines(canvas);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"canvasRow\">\r\n                    <canvas id=\"fractalCanvas\"></canvas>\r\n                </div>\r\n                <Button variant=\"dark\" id=\"generateKochCurveButton\" onClick={this.updateKochLines}>Generate curve</Button>\r\n                <input type=\"range\" className=\"custom-range\" id=\"customRange1\" defaultValue=\"50\" min=\"25\" max=\"100\" />\r\n                <Button variant=\"dark\" id=\"resetButton\" onClick={this.resetCanvas}>Reset canvas</Button>\r\n            </div>\r\n        );\r\n    }\r\n}","import {Coordinate} from \"../coordinate\"\r\n\r\nexport class Tree {\r\n    _root: Coordinate;\r\n    _secondPoint: Coordinate;\r\n    _angle: number;\r\n\r\n    constructor(root: Coordinate, secPoint: Coordinate, angle: number) {\r\n        this._root = root;\r\n        this._secondPoint = secPoint;\r\n        this._angle = angle;\r\n    }\r\n\r\n    root() {\r\n        return this._root;\r\n    }\r\n\r\n    secondPoint() {\r\n        return this._secondPoint;\r\n    }\r\n\r\n    pointLeft() {\r\n        let xVal = this.secondPoint().x() + (this.mainBranchLength()/1.4)*Math.cos(this.angleOfMainBranch() + (this._angle*(Math.PI/180)));\r\n        let yVal = this.secondPoint().y() - (this.mainBranchLength()/1.4)*Math.sin(this.angleOfMainBranch() + (this._angle*(Math.PI/180)));\r\n        return new Coordinate(xVal, yVal);\r\n    }\r\n\r\n    pointRight() {\r\n        console.log(this.angleOfMainBranch()*(180/Math.PI));\r\n        let xVal = this.secondPoint().x() + (this.mainBranchLength()/1.4)*Math.cos(this.angleOfMainBranch() - (this._angle*(Math.PI/180)));\r\n        let yVal = this.secondPoint().y() - (this.mainBranchLength()/1.4)*Math.sin(this.angleOfMainBranch() - (this._angle*(Math.PI/180)));\r\n        return new Coordinate(xVal, yVal);\r\n    }\r\n\r\n    mainBranchLength() {\r\n        return Math.sqrt((this.root().x() - this.secondPoint().x())**2 + (this.root().y() - this.secondPoint().y())**2);\r\n    }\r\n\r\n    angleOfMainBranch() {\r\n        return Math.acos((this.secondPoint().x() - this.root().x())/ this.mainBranchLength());\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Tree} from \"./tree\";\r\nimport {Coordinate} from \"../coordinate\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"./tree.css\";\r\n\r\nexport class TreeElement extends React.Component {\r\n\r\n    _latestTreeLines: Tree[] = [];\r\n    _treeAngle = this.defaultAngle();\r\n    _treeThickness = this.defaultTreeThickness();\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.updateTreeLength = this.updateTreeLength.bind(this);\r\n        this.updateTreeAngle = this.updateTreeAngle.bind(this);\r\n        this.resetCanvas = this.resetCanvas.bind(this);\r\n    }\r\n\r\n    defaultLatestLines(canvas: HTMLCanvasElement) {\r\n        return [new Tree(new Coordinate(canvas.width/2, canvas.height), new Coordinate(canvas.width/2, canvas.height*(3/4)), 45)];\r\n    }\r\n\r\n    defaultTreeThickness() {\r\n        return 10;\r\n    }\r\n\r\n    defaultAngle() {\r\n        return 45;\r\n    }\r\n\r\n    defaultSliderValue() {\r\n        return \"-90\";\r\n    }\r\n\r\n    drawTree(baseTree: Tree, ctx: CanvasRenderingContext2D, lineWidth: number) {\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"#FFFFFF\";\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.moveTo(baseTree.root().x(), baseTree.root().y());\r\n        ctx.lineTo(baseTree.secondPoint().x(), baseTree.secondPoint().y());\r\n        ctx.lineTo(baseTree.pointLeft().x(), baseTree.pointLeft().y());\r\n        ctx.moveTo(baseTree.secondPoint().x(), baseTree.secondPoint().y());\r\n        ctx.lineTo(baseTree.pointRight().x(), baseTree.pointRight().y());\r\n        ctx.stroke();\r\n    }\r\n    \r\n      updateTreeLength() {\r\n        let canvas = document.getElementById(\"fractalCanvas\") as HTMLCanvasElement;\r\n        let ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n        let tempLatestTreeLines: Tree[] = [];\r\n        this._treeThickness *= 0.8;\r\n        this._latestTreeLines.forEach(treeLine=> {\r\n          tempLatestTreeLines.push(new Tree(treeLine.secondPoint(), treeLine.pointRight(), this._treeAngle));\r\n          tempLatestTreeLines.push(new Tree(treeLine.secondPoint(), treeLine.pointLeft(), this._treeAngle));\r\n          this.drawTree(new Tree(treeLine.root(), treeLine.secondPoint(), this._treeAngle), ctx, this._treeThickness);\r\n          this.drawTree(new Tree(treeLine.secondPoint(), treeLine.pointRight(), this._treeAngle), ctx, this._treeThickness);\r\n          this.drawTree(new Tree(treeLine.secondPoint(), treeLine.pointLeft(), this._treeAngle), ctx, this._treeThickness);\r\n        });\r\n        this._latestTreeLines = tempLatestTreeLines;\r\n    }\r\n    \r\n    \r\n      updateTreeAngle() {\r\n        let inputSlider = document.getElementById(\"customVertRange\") as HTMLInputElement;\r\n        this._treeAngle = Number(inputSlider.value);\r\n        console.log(this._treeAngle);\r\n    }\r\n\r\n    resetCanvas() {\r\n        let canvas = document.getElementById(\"fractalCanvas\") as HTMLCanvasElement;\r\n        let ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        this._latestTreeLines = this.defaultLatestLines(canvas);\r\n        this._treeThickness = this.defaultTreeThickness();\r\n        let treeHeightSlider = document.getElementById(\"customRange\") as HTMLInputElement;\r\n        treeHeightSlider.value = this.defaultSliderValue();\r\n        let treeVertSlider = document.getElementById(\"customVertRange\") as HTMLInputElement;\r\n        treeVertSlider.value = this.defaultSliderValue();\r\n        this._treeAngle = this.defaultAngle();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let canvas = document.getElementById(\"fractalCanvas\") as HTMLCanvasElement;\r\n        let ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n        canvas.height = window.innerHeight;\r\n        canvas.width = window.innerWidth;\r\n        this._latestTreeLines = this.defaultLatestLines(canvas);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div id=\"canvasRow\">\r\n                <canvas id=\"fractalCanvas\"></canvas>\r\n                <input type=\"range\" className=\"custom-range\" min=\"-90\" max=\"90\" step=\"15\" id=\"customVertRange\" defaultValue=\"-90\" onChange={this.updateTreeAngle}></input>\r\n                </div>\r\n                <input type=\"range\" className=\"custom-range\" min=\"-90\" max=\"90\" step=\"15\" id=\"customRange\" defaultValue=\"-90\" onChange={this.updateTreeLength}></input>\r\n                <Button variant=\"dark\" id=\"resetTreeButton\" onClick={this.resetCanvas}>Reset canvas</Button>   \r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Coordinate} from \"./components/coordinate\";\r\nimport {Tree} from \"./components/Tree/tree\";\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {KochElement} from \"./components/Koch/kochElement\";\r\nimport {TreeElement} from \"./components/Tree/treeComponent\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      navBarClickElement : \"\",\r\n    }\r\n  }\r\n\r\n  navbarCallBack = (message: string) => {\r\n    console.log(message);\r\n    this.setState({\r\n      navBarClickElement: message\r\n    });\r\n  }\r\n\r\n  drawCircle(x: number, y: number, dia: number, ctx: CanvasRenderingContext2D) {\r\n    \r\n    // begin curve\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = \"#FFFFFF\";\r\n    ctx.arc(x, y, dia, 0, Math.PI*2, true);\r\n    ctx.stroke();\r\n    if (dia > 10) {\r\n      setTimeout(() => {this.drawCircle(x - dia, y, dia/2.0, ctx);}, 60);\r\n      setTimeout(() => {this.drawCircle(x + dia, y, dia/2.0, ctx);}, 60);\r\n      // this.drawCircle(x, y, dia/2.0, ctx);\r\n      // this.drawCircle(x, y, dia/2.0, ctx);\r\n    }\r\n  }\r\n\r\n\r\n  drawTriangle(p1: number, p2: number, p3: number, ctx: CanvasRenderingContext2D) {\r\n\r\n    // begin curve\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = \"#FFFFFF\";\r\n    ctx.moveTo(p1, p2);\r\n    ctx.lineTo(p2, p3);\r\n    ctx.lineTo(p3, p1);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    if (p1 > 4 && p2 > 4 && p3 > 4) {\r\n      setTimeout(() => {this.drawTriangle(p1, p2/1.1, p3, ctx);}, 35);\r\n      // setTimeout(() => {this.drawTriangle((p1+p2)/2, (p2+p3)/2, (p3+p1)/2, ctx);}, 35);\r\n      // this.drawTriangle(p1/2, p2, p3, ctx);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const displayElement = (Object.values(this.state)[0] == \"Koch curve\")? <KochElement /> : <TreeElement />;\r\n    return (\r\n      <div id=\"App\">\r\n        <Navbar parentCallback={this.navbarCallBack}/>\r\n        {/* <KochElement /> */}\r\n        {/* <TreeElement /> */}\r\n        {displayElement}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}